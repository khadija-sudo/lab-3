#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node(int v):data(v),next(NULL){}
};
bool isPalindrome(Node* head) {
    if (!head||!head->next) 
    return true;
    Node* slow = head, *fast = head;
    while (fast && fast->next) {
        slow = slow->next;
        fast = fast->next->next;
    }
    Node* prev = NULL, *curr = slow, *nxt;
    while (curr) {
        nxt = curr->next;
        curr->next = prev;
        prev = curr;
        curr = nxt;
    }
    Node* p1 = head, *p2 = prev;
    while (p2) {
        if (p1->data != p2->data)
        return false;
        p1 = p1->next;
        p2 = p2->next;
    }
    return true;
}

int main() {
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(2);
    head->next->next->next = new Node(1);
    cout << (isPalindrome(head) ? "true":"false");
}
