#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node(int v):data(v),next(NULL){}
};
struct DNode {
    int data;
    DNode* next;
    DNode* prev;
    DNode(int v):data(v),next(NULL),prev(NULL){}
};
DNode* convertToDoubly(Node* head){
    if(!head) return NULL;
    DNode* dhead=new DNode(head->data);
    DNode* dc=dhead;
    Node* sc=head->next;
    while(sc){
        DNode* n=new DNode(sc->data);
        dc->next=n;
        n->prev=dc;
        dc=n;
        sc=sc->next;
    }
    return dhead;
}
Node* convertToCircular(Node* head){
    if(!head)return NULL;
    Node* c=head;
    while(c->next)c=c->next;
    c->next=head;
    return head;
}

int main(){
    Node* head=new Node(1);
    head->next=new Node(2);
    head->next->next=new Node(3);
    DNode* d=convertToDoubly(head);
    Node* c=convertToCircular(head);
    cout<<d->data<<" "<<d->next->data;
}
